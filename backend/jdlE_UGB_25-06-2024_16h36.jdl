
application {
  config {
    baseName gateway
    applicationType gateway
    packageName sn.ugb.gateway
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular

    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    //skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8081
    microfrontends [microserviceGIR, microserviceEnseignement, microserviceEDT, microserviceGRH, microserviceAUA, microserviceDeliberation, microserviceGD, microserviceACLC, microserviceAide, microserviceGED]
  }
  entities ServiceUser, InfosUser, BlocFonctionnel, InfoUserRessource, UserProfileBlocFonctionnel, UserProfile, HistoriqueConnexion, Profil , Ressource
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}

application {
  config {
    baseName microserviceGIR
    applicationType microservice
    packageName sn.ugb.gir
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8083
  }
  entities Etudiant, PaiementFormationPrivee, InformationPersonnelle, FormationPrivee, TypeHandicap, TypeBourse, Region, Pays, Zone, Lycee, Baccalaureat, Serie, TypeSelection, TypeAdmission, DisciplineSportiveEtudiant, DisciplineSportive, AnneeAcademique, ProgrammationInscription, InscriptionAdministrative, InscriptionAdministrativeFormation, InformationImage, ProcessusInscriptionAdministrative , Operation, TypeOperation, Cycle, TypeFormation , Specialite, Niveau, Formation, FormationAutorisee, FormationInvalide, Mention, Domaine, Ufr, Frais, TypeFrais, PaiementFrais, Operateur, Campagne, InscriptionDoctorat, Doctorat, Universite, Ministere, Departement
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}


application {
  config {
    baseName microserviceEnseignement
    applicationType microservice
    packageName sn.ugb.gp
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8084

  }
  entities  Enseignement
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}


application {
  config {
    baseName microserviceEDT
    applicationType microservice
    packageName sn.ugb.edt
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8085

  }
  entities  Planning
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}


application {
  config {
    baseName microserviceGRH
    applicationType microservice
    packageName sn.ugb.grh
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8086

  }
  entities  Enseignant
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}


application {
  config {
    baseName microserviceAUA
    applicationType microservice
    packageName sn.ugb.aua
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8087

  }
  entities  Laboratoire
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}
application {
  config {
    baseName microserviceDeliberation
    applicationType microservice
    packageName sn.ugb.deliberation
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8088

  }
  entities  Deliberation
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}

application {
  config {
    baseName microserviceGD
    applicationType microservice
    packageName sn.ugb.gd
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8089

  }
  entities Rapport, TypeRapport
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}
application {
  config {
    baseName microserviceACLC
    applicationType microservice
    packageName sn.ugb.aclc
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8090

  }
  entities  Candidat
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}
application {
  config {
    baseName microserviceAide
    applicationType microservice
    packageName sn.ugb.aide
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8082

  }
  entities  RessourceAide
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}
application {
  config {
    baseName microserviceGED
    applicationType microservice
    packageName sn.ugb.ged
    serviceDiscoveryType consul
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    clientTheme Flatly
    clientFramework angular
    testFrameworks [cypress, gatling, cucumber]
    languages [fr, en]
    enableSwaggerCodegen true
    nativeLanguage fr
    enableTranslation true
    searchEngine elasticsearch
    skipUserManagement true
    jhiPrefix ugb
    cacheProvider hazelcast
    buildTool maven
    serverPort 8092

  }
  entities  TypeDocument, DocumentDelivre
  dto * with mapstruct
  service * with serviceClass
  service * with serviceImpl
  paginate * with pagination
}


entity  Cycle{
  libelleCycle String required unique
}

entity  TypeFormation {
  libelleTypeFormation String required unique
}

entity InformationImage {
  description String,
  cheminPath String required unique,
  cheminFile String required unique,
  enCoursYN String
}
entity InformationPersonnelle {
  nomEtu String required,
  nomJeuneFilleEtu String,
  prenomEtu String required,
  statutMarital String required,
  regime Integer,
  Profession String,
  adresseEtu String required,
  telEtu String,
  emailEtu String,
  adresseParent String,
  telParent String,
  emailParent String,
  nomParent String,
  prenomParent String,
  handicapYN Boolean,
  photo String,
  ordiPersoYN Boolean,
  derniereModification LocalDate,
  emailUser String
}
entity TypeBourse {
  libelleTypeBourse String required unique
}
entity TypeHandicap {
  libelleTypeHandicap String required unique
}
entity Etudiant {
  codeEtu String required unique,
  ine String ,
  codeBU String ,
  emailUGB String ,
  dateNaissEtu LocalDate required,
  lieuNaissEtu String required,
  sexe String required,
  numDocIdentite String ,
  assimileYN Boolean required,
  actifYN Boolean
}
entity TypeSelection {
  libelleTypeSelection String required unique
}
entity DisciplineSportive {
  libelleDisciplineSportive String required unique
}
entity DisciplineSportiveEtudiant {
  licenceSportiveYN Boolean,
  competitionUGBYN Boolean
}

entity Baccalaureat {
  origineScolaire String ,
  anneeBac LocalDate ,
  numeroTable Integer ,
  natureBac String ,
  mentionBac String ,
  moyenneSelectionBac Float ,
  moyenneBac Float ,
  actifYN Boolean
}

entity Serie {
  codeSerie String,
  libelleSerie String required unique,
  sigleSerie String required unique
}
entity Lycee {
  nomLycee String required unique,
  codeLycee String ,
  villeLycee String ,
  academieLycee Integer ,
  centreExamen String
}

entity Region {
  libelleRegion String required unique
}

entity Pays {
  libellePays String required unique,
  PaysEnAnglais String,
  nationalite String,
  codePays String,
  UEMOAYN Boolean,
  CEDEAOYN Boolean,
  RIMYN Boolean,
  autreYN Boolean,
  estEtrangerYN Boolean
}
entity Zone {
  libelleZone String required unique
}
entity ProcessusInscriptionAdministrative {
  inscriptionDemarreeYN Boolean,
  dateDemarrageInscription Instant,
  inscriptionAnnuleeYN Boolean,
  dateAnnulationInscription Instant,
  apteYN Boolean,
  dateVisiteMedicale Instant,
  beneficiaireCROUSYN Boolean,
  dateRemiseQuitusCROUS Instant,
  nouveauCodeBUYN Boolean,
  quitusBUYN Boolean,
  dateRemiseQuitusBU Instant,
  exporterBUYN Boolean,
  fraisObligatoiresPayesYN Boolean,
  datePaiementFraisObligatoires Instant,
  numeroQuitusCROUS Integer,
  carteEturemiseYN Boolean,
  carteDupremiseYN Boolean,
  dateRemiseCarteEtu Instant,
  dateRemiseCarteDup Integer,
  inscritAdministrativementYN Boolean,
  dateInscriptionAdministrative Instant,
  derniereModification Instant,
  inscritOnlineYN Boolean,
  emailUser String
}

entity TypeAdmission {
  libelleTypeAdmission  String required unique
}
entity InscriptionAdministrative {
  nouveauInscritYN Boolean,
  repriseYN Boolean,
  autoriseYN Boolean,
  ordreInscription Integer
}
entity Operation {
  dateExecution Instant,
  emailUser String,
  detailOperation TextBlob,
  infoSysteme String

}
entity TypeOperation {
  libelleTypeOperation String required unique
}
entity InscriptionAdministrativeFormation {
  inscriptionPrincipaleYN Boolean,
  inscriptionAnnuleeYN Boolean,
  exonereYN Boolean required,
  paiementFraisOblYN Boolean,
  paiementFraisIntegergYN Boolean,
  certificatDelivreYN Boolean,
  dateChoixFormation Instant,
  dateValidationInscription Instant
}
entity AnneeAcademique {
  libelleAnneeAcademique String required ,
  anneeAc Integer required unique min(1990) max(2060) ,
  separateur String maxlength(1) required
  anneeCouranteYN Boolean
}

// ------------- Formation -----------------------------------------
entity PaiementFormationPrivee{
  datePaiement Instant,
  moisPaiement String,
  anneePaiement String,
  payerMensualiteYN Boolean,
  payerDelaisYN Boolean,
  emailUser String
}
entity InscriptionDoctorat{
  sourceFinancement String,
  coEncadreurId String,
  nombreInscription Integer
}

entity Formation {
  classeDiplomanteYN Boolean,
  libelleDiplome String,
  codeFormation String,
  nbreCreditsMin Integer,
  estParcoursYN Boolean,
  lmdYN Boolean,
  actifYN Boolean
}
entity Specialite {
  nomSpecialites String required unique,
  sigleSpecialites String required,
  specialiteParticulierYN Boolean,
  specialitesPayanteYN Boolean required,
  actifYN Boolean
}
entity Mention {
  libelleMention String required unique,
  actifYN Boolean
}
entity Niveau {
  libelleNiveau String required unique,
  codeNiveau String required,
  anneeEtude String,
  actifYN Boolean
}
entity Domaine {
  libelleDomaine String required unique,
  actifYN Boolean
}
entity Ufr {
  libelleUfr String required unique,
  sigleUfr String required unique,
  prefixe String,
  actifYN Boolean
}
entity FormationInvalide{
  actifYN Boolean
}
entity FormationAutorisee {
  dateDebut LocalDate,
  dateFin LocalDate,
  enCoursYN Boolean,
  actifYN Boolean
}
entity FormationPrivee {
  nombreMensualites Integer required,
  paiementPremierMoisYN Boolean ,
  paiementDernierMoisYN Boolean ,
  fraisDossierYN Boolean ,
  coutTotal Float required,
  mensualite Float required,
  actifYN Boolean
}
entity TypeFrais {
  libelleTypeFrais String required unique
}
entity Frais {
  valeurFrais Double required,
  descriptionFrais String,
  fraisPourAssimileYN Boolean,
  fraisPourExonererYN Boolean,
  dia Double,
  dip Double,
  fraisPrivee Double,
  dateApplication LocalDate required,
  dateFin LocalDate,
  estEnApplicationYN Boolean required,
  actifYN Boolean
}
entity PaiementFrais {
  datePaiement LocalDate required,
  obligatoireYN Boolean,
  echeancePayeeYN Boolean,
  emailUser String,
  dateForclos LocalDate,
  forclosYN Boolean,
  paimentDelaiYN Boolean
}
entity Operateur {
  libelleOperateur String required unique,
  userLogin String required,
  codeOperateur String required unique,
  actifYN Boolean
}
entity Campagne {
  libelleCampagne String,
  dateDebut LocalDate,
  dateFin LocalDate,
  libelleAbrege String,
  actifYN Boolean
}
entity Rapport {
  libelleRapport String,
  descriptionRapport String,
  contenuRapport String,
  dateRedaction Instant
}
entity TypeRapport {
  libelleTypeRapport String
}
entity DocumentDelivre {
  libelleDoc String,
  anneeDoc Instant,
  dateEnregistrement Instant
}
entity TypeDocument {
  libelleTypeDocument String
}

entity ProgrammationInscription {
  libelleProgrammation String,
  dateDebutProgrammation LocalDate,
  dateFinProgrammation LocalDate,
  ouvertYN Boolean,
  emailUser String,
  dateForclosClasse LocalDate,
  forclosClasseYN Boolean,
  actifYN Boolean
}

entity Doctorat {
  sujet String required,
  anneeInscriptionDoctorat LocalDate,
  encadreurId Long,
  laboratoirId Long
}

entity Universite {
  nomUniversite String required unique,
  sigleUniversite String required,
  actifYN Boolean required
}
entity Ministere {
  nomMinistere String required unique,
  sigleMinistere String,
  dateDebut LocalDate required ,
  dateFin LocalDate,
  enCoursYN Boolean required,
  actifYN Boolean required
}
entity Departement {
  nomDepatement String required unique,
  actifYN Boolean
}

// ---------------------------- Definition des entites G-User  -------------------------

entity Profil {
  libelle String required unique,
  dateAjout LocalDate required,
  actifYN Boolean required
}

entity InfosUser {
  dateAjout LocalDate required,
  actifYN Boolean required
}

entity ServiceUser {
  nom String required unique,
  dateAjout LocalDate required,
  actifYN Boolean required
}

entity UserProfile {
  dateDebut LocalDate required,
  dateFin LocalDate required,
  enCoursYN Boolean required
}
entity BlocFonctionnel {
  libelleBloc String required unique,
  dateAjoutBloc LocalDate required,
  actifYN Boolean required
}
entity UserProfileBlocFonctionnel {
  date LocalDate required,
  enCoursYN Boolean required
}

entity HistoriqueConnexion {
  dateDebutConnexion LocalDate required,
  dateFinConnexion LocalDate required,
  adresseIp String
  actifYN Boolean required
}

entity Ressource {
  libelle String required unique,
  actifYN Boolean required
}

entity InfoUserRessource {
  dateAjout LocalDate required,
  enCoursYN Boolean required
}


relationship OneToOne {
  InfosUser{user(login)  } to User with builtInEntity
}

relationship ManyToOne {
  HistoriqueConnexion {infoUser} to InfosUser {historiqueConnexions},
  UserProfile {profil} to Profil {userProfiles},
  UserProfile {infoUser} to InfosUser {userProfiles},
  UserProfileBlocFonctionnel {userProfil} to UserProfile {userProfileBlocFonctionnels},
  UserProfileBlocFonctionnel {blocFonctionnel} to BlocFonctionnel {userProfileBlocFonctionnels},
  InfoUserRessource {infosUser} to InfosUser {infoUserRessources},
  InfoUserRessource {ressource} to Ressource {infoUserRessources},
  BlocFonctionnel {service} to ServiceUser {blocFonctionnels}
}

// ---------------------------- Definition des entites Deliberation  -------------------------
entity Deliberation {
  estValideeYN Boolean,
  pvDeliberation Blob
}
// ---------------------------- Definition des entites Enseignement -------------------------
entity Enseignement {
  libelleEnseignements String,
  volumeHoraire Float,
  nombreInscrits Integer,
  groupeYN Boolean
}
// ---------------------------- Definition des entites EDT -------------------------
entity Planning {
  dateDebut Instant,
  dateFin Instant 
}
// ---------------------------- Definition des entites GRH -------------------------
entity Enseignant {
  titreCoEncadreur String,
  nom String required,
  prenom String required,
  email String,
  telephone String,
  titresId Long,
  adresse String,
  numeroPoste Integer,
  photo String
}
// ---------------------------- Definition des entites AUA -------------------------
entity Laboratoire {
  nom String,
  laboratoireCotutelleYN Boolean 
}
// ---------------------------- Definition des entites GED -------------------------
/*entity DocumentDelivre {
  numDocument String,
  dateDelivrance LocalDate 
}

entity TypeDocument {
  libelleDocument String 
}*/
// ---------------------------- Definition des entites ACLC -------------------------
entity Candidat {
  nom String,
  prenom String,
  dateNaissance LocalDate,
  email String
}

// ---------------------------- Definition des entites Aide -------------------------

entity RessourceAide{
  nom String required,
  libelle String
}


relationship OneToOne {
  InformationPersonnelle {etudiant} to Etudiant {informationPersonnelle},
  Baccalaureat {etudiant} to Etudiant {baccalaureat},
  ProcessusInscriptionAdministrative {inscriptionAdministrative} to InscriptionAdministrative {processusDinscriptionAdministrative},
  FormationPrivee {formation} to Formation {formationPrivee}
}

relationship ManyToOne {
  Etudiant {region} to Region {etudiants},
  Region {pays} to Pays {regions},
  DisciplineSportiveEtudiant {disciplineSportive} to DisciplineSportive {disciplineSportiveEtudiants},
  DisciplineSportiveEtudiant {etudiant} to Etudiant {disciplineSportiveEtudiants},
  Etudiant {typeSelection} to TypeSelection {etudiants},
  InscriptionAdministrative {typeAdmission} to TypeAdmission {inscriptionAdministratives},
  Ufr {universite} to Universite {ufrs},
  Universite {ministere} to Ministere {universites},
  Lycee {region} to Region {lycees},
  Etudiant {lycee} to Lycee {etudiants},
  InformationPersonnelle {typeHandicap} to TypeHandicap {informationPersonnelles},
  InformationPersonnelle {typeBourse} to TypeBourse {informationPersonnelles},
  Formation {typeFormation} to TypeFormation {formations},
  Formation {niveau} to Niveau {formations},
  Niveau {typeCycle} to Cycle {niveaux},
  Formation {specialite} to Specialite {formations},
  Specialite {mention} to Mention {specialites},
  Mention {domaine} to Domaine {mentions},
  InscriptionAdministrative {anneeAcademique} to AnneeAcademique {inscriptionAdministratives},
  InscriptionAdministrative {etudiant} to Etudiant {inscriptionAdministratives},
  FormationInvalide {formation} to Formation {formationInvalides},
  FormationInvalide {anneeAcademique} to AnneeAcademique {formationInvalides},
  InscriptionAdministrativeFormation {inscriptionAdministrative} to InscriptionAdministrative {inscriptionAdministrativeFormations},
  InscriptionAdministrativeFormation {formation} to Formation {inscriptionAdministrativeFormations},
  InscriptionDoctorat {doctorat} to Doctorat {inscriptionDoctorats},
  InscriptionDoctorat {inscriptionAdministrativeFormation} to InscriptionAdministrativeFormation {inscriptionDoctorats},
  ProgrammationInscription {anneeAcademique} to AnneeAcademique {programmationInscriptions},
  ProgrammationInscription {formation} to Formation {programmationInscriptions},
  ProgrammationInscription {campagne} to Campagne {programmationInscriptions},
  PaiementFrais {frais} to Frais {paiementFrais},
  PaiementFrais {operateur} to Operateur {paiementFrais},
  PaiementFrais {inscriptionAdministrativeFormation} to InscriptionAdministrativeFormation {paiementFrais},
  PaiementFormationPrivee {inscriptionAdministrativeFormation} to InscriptionAdministrativeFormation {paiementFormationPrivees},
  PaiementFormationPrivee {operateur} to Operateur {paiementFormationPrivees},
  Frais {typeFrais} to TypeFrais {frais},
  Frais {typeCycle} to Cycle {frais},
  DocumentDelivre {typeDocument} to TypeDocument {documentsDelivres},
  Operation {typeOperation} to TypeOperation {operations},
  Baccalaureat {serie} to Serie {baccalaureats}
  Departement{ufr} to Ufr,
  Formation{departement} to Departement // a revoir faire la liason avec Specialite

}

relationship ManyToMany {
  Pays{zone} to Zone{pays},
  FormationAutorisee{formation} to Formation{formationAutorisee},
  Domaine{ufr} to Ufr{domaine},
  Frais{universite} to Universite{frais}
}

deployment {
  deploymentType docker-compose
  serviceDiscoveryType consul
  appsFolders [gateway,  microserviceGIR, microserviceEnseignement, microserviceEDT, microserviceGRH, microserviceAUA, microserviceDeliberation, microserviceGD, microserviceACLC, microserviceAide, microserviceGED]
  dockerRepositoryName  "eUGB"
  monitoring prometheus
}

deployment {
  deploymentType kubernetes
  appsFolders [gateway,  microserviceGIR, microserviceEnseignement, microserviceEDT, microserviceGRH, microserviceAUA, microserviceDeliberation, microserviceGD, microserviceACLC, microserviceAide, microserviceGED]
  clusteredDbApps [gateway,  microserviceGIR, microserviceEnseignement, microserviceEDT, microserviceGRH, microserviceAUA, microserviceDeliberation, microserviceGD, microserviceACLC, microserviceAide, microserviceGED]
  kubernetesNamespace sn-ugb  // Remplacez par un nom approprié
  kubernetesUseDynamicStorage true
  kubernetesStorageClassName "standard"
  serviceDiscoveryType consul
  dockerRepositoryName "eUGB"
  istio true
  ingressDomain "ugb.sn"  // Remplacez example.com par votre domaine d'entrée réel
  monitoring prometheus

}


